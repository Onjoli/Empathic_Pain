## Loading files & variables
# This piece of code I am loading the files one-by-one so will need to change path every time
# I am also using the MNI152NLin2009cAsym files only.
# output of this piece of code will be: img1, data1, conf1 - for run 01
#                                       img2, data2, conf2 - for run 02


import nilearn
import glob
import os
import re
import nibabel as nib
import pandas as pd

# 1. Paths
func_dir = '/Users/lyanne/EmpathicPain/Data/sub-001/func'
reg_dir  = '/Users/lyanne/EmpathicPain/Data/events/sub-001/regressors'

# 2. Grab only the Lin2009cAsym bold files
pattern   = os.path.join(func_dir, '*MNI152NLin2009cAsym*_bold.nii*')
nii_files = sorted(glob.glob(pattern))
print("Found bold files:", nii_files)

# 3. Loop & pair each with its confounds
for nii_path in nii_files:
    basename = os.path.basename(nii_path)
    
    # Extract subj_task and run number, e.g. "sub-001_task-empathy" + "run-01"
    m = re.match(r'(sub-[^_]+_task-[^_]+).*?(run-\d+)', basename)
    if not m:
        raise ValueError(f"Can't parse subject/task/run from {basename}")
    subj_task = m.group(1)
    run       = m.group(2)
    
    # Build confounds filename: sub-001_task-empathy_run-01_confounds.txt
    conf_name = f"{subj_task}_{run}_confounds.txt"
    conf_path = os.path.join(reg_dir, conf_name)
    if not os.path.exists(conf_path):
        raise FileNotFoundError(f"Confounds file not found: {conf_path}")
    
    # Load the bold image
    img  = nib.load(nii_path)
    data = img.get_fdata()
    print(f"{basename} → image shape {data.shape}")
    
    # Load the confounds
    # adjust sep if whitespace-delimited; here we assume tab-delimited
    conf_df = pd.read_csv(conf_path, sep='\t')
    print(f"{conf_name} → confounds shape {conf_df.shape}")
    
    # Assign to run-specific variables
    if run == 'run-01':
        img1, data1, path1, conf1 = img, data, nii_path, conf_df
    elif run == 'run-02':
        img2, data2, path2, conf2 = img, data, nii_path, conf_df
